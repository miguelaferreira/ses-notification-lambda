name: "Continuous Delivery"

on:
  push:
    tags:
      - v*

jobs:
  build_release:
    name: "Build release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v2
      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
            ${GITHUB_WORKSPACE}/.gradle
            ~/.sdkman
          key: release-java17-graalvm
      - name: "Install Java"
        uses: sdkman/sdkman-action@master
        id: sdkman
        with:
          candidate: java
          version: 17.0.8-graalce
      - name: "Setup Java"
        uses: actions/setup-java@v1
        id: setup-java
        with:
          java-version: 17
          jdkFile: ${{ steps.sdkman.outputs.file }}
      - name: "Update release version"
        run: |
          version=${tag_ref/refs\/tags\//}
          sed -i -e "s/version = \".*\"/version = \"${version}\"/" build.gradle
          cat build.gradle
        env:
          tag_ref: ${{ github.ref }}
      - name: "Gradle build"
        run: ./gradlew build
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v2
        with:
          path: build/libs/*.jar
          if-no-files-found: error


  create_release:
    name: "Create release"
    needs: build_release
    runs-on: ubuntu-latest
    env:
      release_body_file: "body.txt"
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v2
      - name: "Download all workflow run artifacts"
        uses: actions/download-artifact@v2
        with:
          path: "artifacts"
      - name: "Generate changelog"
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: "Prepare release files"
        id: release-files
        run: |
          version=${tag_ref/refs\/tags\//}

          # Create sha256sum for each release file
          cd artifacts/artifact
          for file in *; do sha256sum "${file}" > "${file}.sha256sum"; done
          cd -

          # Create release text
          cat <<'EOF' > "${release_body_file}"
          ## SHA 256
          EOF

          cd artifacts/artifact
          for file in *.sha256sum; do echo "- $(cat "${file}")" >> "../../${release_body_file}"; done
          cd -

          cat <<'EOF' >> "${release_body_file}"

          ## Change log
          EOF

          echo "${change_log}" >> "${release_body_file}"
          echo "::set-output name=new_version::${version}"
        env:
          tag_ref: ${{ github.ref }}
          change_log: ${{ steps.changelog.outputs.changelog }}
      - name: "Create release"
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ env.release_body_file }}
          files: artifacts/artifact/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
